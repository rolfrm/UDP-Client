// This file is auto generated by icy-table.
#include "icydb.h"
typedef struct _u64_ptr{
  char ** column_names;
  char ** column_types;
  size_t count;
  const bool is_multi_table;
  const int column_count;
  int (*cmp) (const u64 * k1, const u64 * k2);
  const size_t sizes[2];

  u64 * key;
  string * value;
  icy_mem * key_area;
  icy_mem * value_area;
}u64_ptr;

u64_ptr * u64_ptr_create(const char * optional_name);
void u64_ptr_set(u64_ptr * table, u64 key, string value);
void u64_ptr_insert(u64_ptr * table, u64 * key, string * value, size_t count);
void u64_ptr_lookup(u64_ptr * table, u64 * keys, size_t * out_indexes, size_t count);
void u64_ptr_remove(u64_ptr * table, u64 * keys, size_t key_count);
void u64_ptr_clear(u64_ptr * table);
void u64_ptr_unset(u64_ptr * table, u64 key);
bool u64_ptr_try_get(u64_ptr * table, u64 * key, string * value);
void u64_ptr_print(u64_ptr * table);
size_t u64_ptr_iter(u64_ptr * table, u64 * keys, size_t keycnt, u64 * optional_keys_out, size_t * indexes, size_t cnt, size_t * iterator);
